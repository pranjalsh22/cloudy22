import streamlit as st
import runpy
import os

#link:
# https://github.com/pranjalsh22/cloudy22/blob/main/Poster_2024-11_ISSAC2024_Pranjal_v10-final.pdf

#------------

import base64

def display_poster_html(image_file, preview_width=400):
    with open(image_file, "rb") as f:
        data = f.read()
    encoded = base64.b64encode(data).decode()
    
    st.markdown(
        f"""
        <div style="text-align:center;">
            <img src="data:image/jpg;base64,{encoded}" 
                 style="max-width:90%; width:{preview_width}px; border:4px solid #ccc; box-shadow:5px 5px 15px rgba(0,0,0,0.3); border-radius:8px;">
        </div>
        """,
        unsafe_allow_html=True
    )

#-----------
st.set_page_config(page_title="My Streamlit App", layout="wide")

# Paths to your scripts
PAGES = {
    "Home": {"path": None, "logo": "üè†"},
    "Continuum File": {"path": "pages/save_continuum_file.py", "logo": "üíæ"},
    "Cloudy Out File": {"path": "pages/cloudy_out_file.py", "logo": "‚òÅÔ∏è"}
}

if "page" not in st.session_state:
    st.session_state.page = "Home"

cols = st.columns(len(PAGES))
for i, (name, details) in enumerate(PAGES.items()):
    if cols[i].button(f"{details['logo']} {name}"):
        st.session_state.page = name

st.markdown("---")

if st.session_state.page == "Home":
    st.title("CLOUDY output file interpretor")
    st.write("by Pranjal Sharma")
    st.write("The goal of this webapp is analyse the output files generated by Cloudy:the spectral synthesis code.")
    st.header("The .out file")
    st.write("The lines that for the .out file and display visual.")
    st.header("The continuum file")
    st.write("The continuum file generated using the save continuum command can be using to analyse the bolometric luminosity of the cloud or the source.")
    st.header(" My work")
    display_poster_html('poster.jpg',600)
else:
    page_path = PAGES[st.session_state.page]["path"]
    if page_path and os.path.exists(page_path):
        # Execute the page script just like running `streamlit run <file>`
        runpy.run_path(page_path, run_name="__main__")
    else:
        st.error(f"Page not found: {page_path}")
